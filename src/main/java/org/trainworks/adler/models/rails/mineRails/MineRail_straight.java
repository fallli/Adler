// Date: 09.04.2017 20:33:41
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package org.trainworks.adler.models.rails.mineRails;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class MineRail_straight extends ModelBase {
  //fields
    ModelRenderer rightRailHead;
    ModelRenderer leftRailHead;
    ModelRenderer rightRailBody;
    ModelRenderer leftRailBody;
    ModelRenderer rightRailFoot;
    ModelRenderer leftRailFoot;
    ModelRenderer sleeperA;
    ModelRenderer sleeperB;
    ModelRenderer holderRightA;
    ModelRenderer holderRightB;
    ModelRenderer holderLeftA;
    ModelRenderer holderLeftB;
    ModelRenderer outerNailRightA;
    ModelRenderer innerNailRightA;
    ModelRenderer outerNailRightB;
    ModelRenderer innerNailRightB;
    ModelRenderer outerNailLeftA;
    ModelRenderer innerNailLeftA;
    ModelRenderer outerNailLeftB;
    ModelRenderer innerNailLeftB;
  
  public MineRail_straight() {
    textureWidth = 512;
    textureHeight = 256;
    
      rightRailHead = new ModelRenderer(this, 0, 0);
      rightRailHead.addBox(0F, 0F, 0F, 3, 2, 80);
      rightRailHead.setRotationPoint(21F, 113F, -40F);
      rightRailHead.setTextureSize(512, 256);
      rightRailHead.mirror = true;
      setRotation(rightRailHead, 0F, 0F, 0F);
      leftRailHead = new ModelRenderer(this, 0, 83);
      leftRailHead.addBox(0F, 0F, 0F, 3, 2, 80);
      leftRailHead.setRotationPoint(-24F, 113F, -40F);
      leftRailHead.setTextureSize(512, 256);
      leftRailHead.mirror = true;
      setRotation(leftRailHead, 0F, 0F, 0F);
      rightRailBody = new ModelRenderer(this, 89, 3);
      rightRailBody.addBox(0F, 0F, 0F, 2, 2, 80);
      rightRailBody.setRotationPoint(21.5F, 115F, -40F);
      rightRailBody.setTextureSize(512, 256);
      rightRailBody.mirror = true;
      setRotation(rightRailBody, 0F, 0F, 0F);
      leftRailBody = new ModelRenderer(this, 89, 86);
      leftRailBody.addBox(0F, 0F, 0F, 2, 2, 80);
      leftRailBody.setRotationPoint(-23.5F, 115F, -40F);
      leftRailBody.setTextureSize(512, 256);
      leftRailBody.mirror = true;
      setRotation(leftRailBody, 0F, 0F, 0F);
      rightRailFoot = new ModelRenderer(this, 176, 0);
      rightRailFoot.addBox(0F, 0F, 0F, 5, 1, 80);
      rightRailFoot.setRotationPoint(20F, 117F, -40F);
      rightRailFoot.setTextureSize(512, 256);
      rightRailFoot.mirror = true;
      setRotation(rightRailFoot, 0F, 0F, 0F);
      leftRailFoot = new ModelRenderer(this, 176, 82);
      leftRailFoot.addBox(0F, 0F, 0F, 5, 1, 80);
      leftRailFoot.setRotationPoint(-25F, 117F, -40F);
      leftRailFoot.setTextureSize(512, 256);
      leftRailFoot.mirror = true;
      setRotation(leftRailFoot, 0F, 0F, 0F);
      sleeperA = new ModelRenderer(this, 0, 169);
      sleeperA.addBox(0F, 0F, 0F, 76, 2, 8);
      sleeperA.setRotationPoint(-38F, 118F, 16F);
      sleeperA.setTextureSize(512, 256);
      sleeperA.mirror = true;
      setRotation(sleeperA, 0F, 0F, 0F);
      sleeperB = new ModelRenderer(this, 171, 169);
      sleeperB.addBox(0F, 0F, 0F, 76, 2, 8);
      sleeperB.setRotationPoint(-38F, 118F, -24F);
      sleeperB.setTextureSize(512, 256);
      sleeperB.mirror = true;
      setRotation(sleeperB, 0F, 0F, 0F);
      holderRightA = new ModelRenderer(this, 115, 120);
      holderRightA.addBox(0F, 0F, 0F, 8, 2, 6);
      holderRightA.setRotationPoint(18.5F, 116.5F, 17F);
      holderRightA.setTextureSize(512, 256);
      holderRightA.mirror = true;
      setRotation(holderRightA, 0F, 0F, 0F);
      holderRightB = new ModelRenderer(this, 115, 40);
      holderRightB.addBox(0F, 0F, 0F, 8, 2, 6);
      holderRightB.setRotationPoint(18.5F, 116.5F, -23F);
      holderRightB.setTextureSize(512, 256);
      holderRightB.mirror = true;
      setRotation(holderRightB, 0F, 0F, 0F);
      holderLeftA = new ModelRenderer(this, 30, 120);
      holderLeftA.addBox(0F, 0F, 0F, 8, 2, 6);
      holderLeftA.setRotationPoint(-26.5F, 116.5F, 17F);
      holderLeftA.setTextureSize(512, 256);
      holderLeftA.mirror = true;
      setRotation(holderLeftA, 0F, 0F, 0F);
      holderLeftB = new ModelRenderer(this, 30, 40);
      holderLeftB.addBox(0F, 0F, 0F, 8, 2, 6);
      holderLeftB.setRotationPoint(-26.5F, 116.5F, -23F);
      holderLeftB.setTextureSize(512, 256);
      holderLeftB.mirror = true;
      setRotation(holderLeftB, 0F, 0F, 0F);
      outerNailRightA = new ModelRenderer(this, 150, 122);
      outerNailRightA.addBox(0F, 0F, 0F, 2, 2, 2);
      outerNailRightA.setRotationPoint(24F, 115F, 19F);
      outerNailRightA.setTextureSize(512, 256);
      outerNailRightA.mirror = true;
      setRotation(outerNailRightA, 0F, 0F, 0F);
      innerNailRightA = new ModelRenderer(this, 100, 122);
      innerNailRightA.addBox(0F, 0F, 0F, 2, 2, 2);
      innerNailRightA.setRotationPoint(19F, 115F, 19F);
      innerNailRightA.setTextureSize(512, 256);
      innerNailRightA.mirror = true;
      setRotation(innerNailRightA, 0F, 0F, 0F);
      outerNailRightB = new ModelRenderer(this, 150, 42);
      outerNailRightB.addBox(0F, 0F, 0F, 2, 2, 2);
      outerNailRightB.setRotationPoint(24F, 115F, -21F);
      outerNailRightB.setTextureSize(512, 256);
      outerNailRightB.mirror = true;
      setRotation(outerNailRightB, 0F, 0F, 0F);
      innerNailRightB = new ModelRenderer(this, 100, 42);
      innerNailRightB.addBox(0F, 0F, 0F, 2, 2, 2);
      innerNailRightB.setRotationPoint(19F, 115F, -21F);
      innerNailRightB.setTextureSize(512, 256);
      innerNailRightB.mirror = true;
      setRotation(innerNailRightB, 0F, 0F, 0F);
      outerNailLeftA = new ModelRenderer(this, 15, 122);
      outerNailLeftA.addBox(0F, 0F, 0F, 2, 2, 2);
      outerNailLeftA.setRotationPoint(-26F, 115F, 19F);
      outerNailLeftA.setTextureSize(512, 256);
      outerNailLeftA.mirror = true;
      setRotation(outerNailLeftA, 0F, 0F, 0F);
      innerNailLeftA = new ModelRenderer(this, 65, 122);
      innerNailLeftA.addBox(0F, 0F, 0F, 2, 2, 2);
      innerNailLeftA.setRotationPoint(-21F, 115F, 19F);
      innerNailLeftA.setTextureSize(512, 256);
      innerNailLeftA.mirror = true;
      setRotation(innerNailLeftA, 0F, 0F, 0F);
      outerNailLeftB = new ModelRenderer(this, 15, 42);
      outerNailLeftB.addBox(0F, 0F, 0F, 2, 2, 2);
      outerNailLeftB.setRotationPoint(-26F, 115F, -21F);
      outerNailLeftB.setTextureSize(512, 256);
      outerNailLeftB.mirror = true;
      setRotation(outerNailLeftB, 0F, 0F, 0F);
      innerNailLeftB = new ModelRenderer(this, 65, 42);
      innerNailLeftB.addBox(0F, 0F, 0F, 2, 2, 2);
      innerNailLeftB.setRotationPoint(-21F, 115F, -21F);
      innerNailLeftB.setTextureSize(512, 256);
      innerNailLeftB.mirror = true;
      setRotation(innerNailLeftB, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    rightRailHead.render(f5);
    leftRailHead.render(f5);
    rightRailBody.render(f5);
    leftRailBody.render(f5);
    rightRailFoot.render(f5);
    leftRailFoot.render(f5);
    sleeperA.render(f5);
    sleeperB.render(f5);
    holderRightA.render(f5);
    holderRightB.render(f5);
    holderLeftA.render(f5);
    holderLeftB.render(f5);
    outerNailRightA.render(f5);
    innerNailRightA.render(f5);
    outerNailRightB.render(f5);
    innerNailRightB.render(f5);
    outerNailLeftA.render(f5);
    innerNailLeftA.render(f5);
    outerNailLeftB.render(f5);
    innerNailLeftB.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z) {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
  }

}
